(set-logic HORN)

(declare-datatypes ((node 0)) (((node  (data Int) (next Int)))))
(declare-datatypes ((HeapObject 0)) (((O_Int  (getInt Int)) (O_UInt  (getUInt Int)) (O_Addr  (getAddr Int)) (O_node  (getnode node)) (defObj ))))
(declare-datatypes ((Heap 0)) (((HeapCtor  (HeapSize Int) (HeapContents (Array Int HeapObject))))))

(declare-fun |inv_main17| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main52| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main38| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main4| ( Heap Int Int ) Bool)
(declare-fun |inv_main42| ( Heap Int Int Int Int ) Bool)
(declare-fun |inv_main25| ( Heap Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main10| ( Heap Int Int Int Int Int ) Bool)
(declare-fun |inv_main23| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main62| ( Heap Int Int Int Int ) Bool)
(declare-fun |inv_main30| ( Heap Int Int Int Int ) Bool)
(declare-fun |inv_main37| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main51| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main59| ( Heap Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Heap) (v_1 Int) (v_2 Int) ) 
    (=>
      (and
        (and (= A (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)))
     (= 2 v_1)
     (= 1 v_2))
      )
      (inv_main4 A v_1 v_2)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main17 I H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) 0))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (HeapCtor (HeapSize I) (store (HeapContents I) B a!2))
                I)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main23 A H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Heap) ) 
    (=>
      (and
        (inv_main38 T S R Q P O N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize T) N))
                (select (HeapContents T) N)
                defObj)))
  (and (= K L)
       (= I S)
       (= H R)
       (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B (next (getnode a!1)))
       (= J T)
       ((_ is O_node) a!1)
       (not (<= 2 K))
       (= A (+ (- 1) K))))
      )
      (inv_main37 J I H G F E B C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (v_7 Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main30 G F E D C)
        (and (= A (+ C F)) (not (<= 1 C)) (<= 0 C) (= B (+ C F)) (= v_7 D) (= v_8 C))
      )
      (inv_main37 G F E D C B v_7 A v_8)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main51 O N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize O) I))
                (select (HeapContents O) I)
                defObj)))
  (and (= G J)
       (= F (data (getnode a!1)))
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= E O)
       ((_ is O_node) a!1)
       (not (= G F))))
      )
      (inv_main62 E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main25 O N M L K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize O) I))
                (select (HeapContents O) I)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) J))))
(let ((a!3 (ite (and (not (<= I 0)) (>= (HeapSize O) I))
                (HeapCtor (HeapSize O) (store (HeapContents O) I a!2))
                O)))
  (and (= G N)
       (= F M)
       (= D K)
       (= C J)
       (= B I)
       (= A (+ (- 1) E))
       (= H a!3)
       ((_ is O_node) a!1)
       (= E L)))))
      )
      (inv_main10 H G F A D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main4 I H G)
        (and (= E H) (= D G) (= C H) (= B G) (= F I) (= A 0))
      )
      (inv_main10 F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main37 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize S) M))
                (select (HeapContents S) M)
                defObj)))
(let ((a!2 (O_node (node L (next (getnode a!1))))))
(let ((a!3 (ite (and (not (<= M 0)) (>= (HeapSize S) M))
                (HeapCtor (HeapSize S) (store (HeapContents S) M a!2))
                S)))
  (and (= H Q)
       (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A (+ (- 1) F))
       (= J a!3)
       ((_ is O_node) a!1)
       (= I R)))))
      )
      (inv_main30 J I H G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main10 G F E D C B)
        (and (not (<= 1 D)) (= A (+ (- 1) F)))
      )
      (inv_main30 G F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Heap) ) 
    (=>
      (and
        (inv_main38 T S R Q P O N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize T) N))
                (select (HeapContents T) N)
                defObj)))
  (and (= K L)
       (= I S)
       (= H R)
       (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B (next (getnode a!1)))
       (= J T)
       ((_ is O_node) a!1)
       (<= 2 K)
       (= A (+ (- 1) K))))
      )
      (inv_main38 J I H G F E B C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (v_7 Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main30 G F E D C)
        (and (= A (+ C F)) (<= 1 C) (<= 0 C) (= B (+ C F)) (= v_7 D) (= v_8 C))
      )
      (inv_main38 G F E D C B v_7 A v_8)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main10 O N M L K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize O))
                     (store (HeapContents O) (+ 1 (HeapSize O)) (O_node G)))))
  (and (= E M)
       (= F N)
       (= D L)
       (= C K)
       (= B J)
       (= A K)
       (= I (+ 1 (HeapSize O)))
       (= H a!1)
       (<= 1 L)
       (not (= 0 I))))
      )
      (inv_main17 H F E D C B A I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Heap) ) 
    (=>
      (and
        (inv_main59 T S R Q P O)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize T) O))
                (select (HeapContents T) O)
                defObj))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize M) H))
                (HeapCtor (HeapSize M) (store (HeapContents M) H defObj))
                M)))
  (and (= J Q)
       (= L S)
       (= K R)
       (= I P)
       (= H O)
       (= G (next (getnode a!1)))
       (= E L)
       (= D K)
       (= C J)
       (= B I)
       (not (= N 0))
       (= N G)
       (= F a!2)
       (= M T)
       ((_ is O_node) a!1)
       (= A H)))
      )
      (inv_main59 F E D C B N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (v_5 Int) ) 
    (=>
      (and
        (inv_main42 E D C B A)
        (and (not (<= 0 A)) (not (= B 0)) (= v_5 B))
      )
      (inv_main59 E D C B A v_5)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (inv_main52 R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize R) L))
                (select (HeapContents R) L)
                defObj)))
  (and (= J K)
       (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B (next (getnode a!1)))
       (= A (+ (- 1) J))
       (= I R)
       ((_ is O_node) a!1)
       (not (<= 2 J))
       (= H Q)))
      )
      (inv_main51 I H G F E D B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (v_6 Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main42 F E D C B)
        (and (not (<= 1 B)) (<= 0 B) (= A (+ B E)) (= v_6 C) (= v_7 B))
      )
      (inv_main51 F E D C B A v_6 v_7)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (inv_main23 P O N M L K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize P) I))
                (select (HeapContents P) I)
                defObj)))
(let ((a!2 (O_node (node J (next (getnode a!1))))))
(let ((a!3 (ite (and (not (<= I 0)) (>= (HeapSize P) I))
                (HeapCtor (HeapSize P) (store (HeapContents P) I a!2))
                P)))
  (and (= G O)
       (= E M)
       (= D L)
       (= C K)
       (= B J)
       (= A I)
       (= H a!3)
       ((_ is O_node) a!1)
       (= F N)))))
      )
      (inv_main25 H G F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (inv_main52 R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize R) L))
                (select (HeapContents R) L)
                defObj)))
  (and (= J K)
       (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B (next (getnode a!1)))
       (= A (+ (- 1) J))
       (= I R)
       ((_ is O_node) a!1)
       (<= 2 J)
       (= H Q)))
      )
      (inv_main52 I H G F E D B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (v_6 Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main42 F E D C B)
        (and (<= 1 B) (<= 0 B) (= A (+ B E)) (= v_6 C) (= v_7 B))
      )
      (inv_main52 F E D C B A v_6 v_7)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main30 F E D C B)
        (and (not (<= 0 B)) (= A (+ (- 1) E)))
      )
      (inv_main42 F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (inv_main51 P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize P) J))
                (select (HeapContents P) J)
                defObj)))
  (and (= H K)
       (= G (data (getnode a!1)))
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A (+ (- 1) B))
       (= F P)
       ((_ is O_node) a!1)
       (= H G)))
      )
      (inv_main42 F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main17 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize H) A))
                (select (HeapContents H) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main23 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize H) A))
                (select (HeapContents H) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main25 G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize G) A))
                (select (HeapContents G) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main38 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main37 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main52 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main51 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main59 F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize F) A))
                (select (HeapContents F) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main62 E D C B A)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)

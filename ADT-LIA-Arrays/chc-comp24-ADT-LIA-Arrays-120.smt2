(set-logic HORN)

(declare-datatypes ((item 0)) (((item  (next Int) (data Int)))))
(declare-datatypes ((HeapObject 0)) (((O_Int  (getInt Int)) (O_UInt  (getUInt Int)) (O_Addr  (getAddr Int)) (O_item  (getitem item)) (defObj ))))
(declare-datatypes ((Heap 0)) (((HeapCtor  (HeapSize Int) (HeapContents (Array Int HeapObject))))))

(declare-fun |inv_main2| ( Heap Int ) Bool)
(declare-fun |inv_main14| ( Heap Int Int Int Int Int ) Bool)
(declare-fun |inv_main13| ( Heap Int Int Int Int Int ) Bool)
(declare-fun |inv_main23| ( Heap Int Int Int Int ) Bool)
(declare-fun |inv_main16| ( Heap Int Int Int Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main21| ( Heap Int Int Int ) Bool)
(declare-fun |inv_main28| ( Heap Int Int Int ) Bool)

(assert
  (forall ( (v_0 Heap) (v_1 Int) ) 
    (=>
      (and
        (and true
     (= v_0 (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)))
     (= 0 v_1))
      )
      (inv_main2 v_0 v_1)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main13 G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj)))
(let ((a!2 (O_item (item E (data (getitem a!1))))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (HeapCtor (HeapSize G) (store (HeapContents G) B a!2))
                G)))
  (and ((_ is O_item) a!1) (= A a!3)))))
      )
      (inv_main14 A F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D item) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Heap) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Heap) (v_23 Int) ) 
    (=>
      (and
        (inv_main16 W V U T S R Q)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize W) R))
                (select (HeapContents W) R)
                defObj))
      (a!4 (or (and (<= K 19) (= P 1)) (and (not (<= K 19)) (= P 0))))
      (a!5 (HeapCtor (+ 1 (HeapSize N))
                     (store (HeapContents N) (+ 1 (HeapSize N)) (O_item D)))))
(let ((a!2 (O_item (item (next (getitem a!1)) Q))))
(let ((a!3 (ite (and (not (<= R 0)) (>= (HeapSize W) R))
                (HeapCtor (HeapSize W) (store (HeapContents W) R a!2))
                W)))
  (and (= N M)
       (= M a!3)
       (= A (+ 1 (HeapSize N)))
       (= B (+ 1 L))
       (not (= P 0))
       (not (= O 0))
       (= L K)
       (= K V)
       (= J I)
       (= I R)
       (= H (+ 1 G))
       (= G T)
       (= F U)
       (= E S)
       ((_ is O_item) a!1)
       a!4
       (= C a!5)
       (= 2 v_23)))))
      )
      (inv_main13 C B J H v_23 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D item) (E Int) (F Int) (G Heap) (H Int) (I Heap) (v_9 Int) (v_10 Int) ) 
    (=>
      (and
        (inv_main2 I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) (O_item D)))))
  (and (= G I)
       (= B (+ 1 F))
       (= A (+ 1 (HeapSize G)))
       (= F H)
       (= E 0)
       (= C a!1)
       (= 0 v_9)
       (= 2 v_10)))
      )
      (inv_main13 C B E v_9 v_10 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main16 O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize O) J))
                (select (HeapContents O) J)
                defObj)))
(let ((a!2 (O_item (item (next (getitem a!1)) I))))
(let ((a!3 (ite (and (not (<= J 0)) (>= (HeapSize O) J))
                (HeapCtor (HeapSize O) (store (HeapContents O) J a!2))
                O)))
  (and (= E N)
       (= H L)
       (= G 0)
       (= D M)
       (= C K)
       (= B J)
       (= A (+ 1 H))
       ((_ is O_item) a!1)
       (<= 0 H)
       (= F a!3)))))
      )
      (inv_main21 F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main16 S R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize S) N))
                (select (HeapContents S) N)
                defObj))
      (a!2 (or (and (<= F 19) (= K 1)) (and (not (<= F 19)) (= K 0)))))
(let ((a!3 (O_item (item (next (getitem a!1)) M))))
(let ((a!4 (ite (and (not (<= N 0)) (>= (HeapSize S) N))
                (HeapCtor (HeapSize S) (store (HeapContents S) N a!3))
                S)))
  (and (= I H)
       (not (= J 0))
       (= L (+ 1 C))
       (= K 0)
       (= G F)
       (= F R)
       (= E D)
       (= D N)
       (= C P)
       (= B Q)
       (= A O)
       ((_ is O_item) a!1)
       (<= 1 L)
       a!2
       (= H a!4)))))
      )
      (inv_main21 I G E L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (inv_main23 P O N M L)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H defObj))
                J))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize P) N))
                (select (HeapContents P) N)
                defObj)))
(let ((a!3 (not (<= (data (getitem a!2)) 0)))
      (a!5 (HeapCtor (HeapSize P)
                     (store (HeapContents P) (data (getitem a!2)) defObj))))
(let ((a!4 (and a!3 (>= (HeapSize P) (data (getitem a!2))))))
  (and (= E a!1)
       (= G M)
       (= F L)
       (= I O)
       (= H N)
       (= D I)
       (= C H)
       (= B F)
       (= A (+ (- 1) K))
       (= K G)
       ((_ is O_item) a!2)
       (<= 2 K)
       (= J (ite a!4 a!5 P))))))
      )
      (inv_main28 E D B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main28 O N M L)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H defObj))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize O) M))
                (select (HeapContents O) M)
                defObj)))
  (and (= E a!1)
       (= F (next (getitem a!2)))
       (= I N)
       (= H M)
       (= G L)
       (= D I)
       (= C H)
       (= B F)
       (= A (+ (- 1) K))
       (= K G)
       ((_ is O_item) a!2)
       (<= 2 K)
       (= J O)))
      )
      (inv_main28 E D B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main14 G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj)))
(let ((a!2 (not (<= (next (getitem a!1)) 0)))
      (a!5 (not (= (next (getitem a!1)) 0))))
(let ((a!3 (and a!2 (>= (HeapSize G) (next (getitem a!1))))))
(let ((a!4 (ite a!3 (select (HeapContents G) (next (getitem a!1))) defObj)))
  (and (= A (data (getitem a!4))) ((_ is O_item) a!4) ((_ is O_item) a!1) a!5)))))
      )
      (inv_main16 G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C item) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main14 I H G F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize I) D))
                (select (HeapContents I) D)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) (O_item C)))))
  (and (= (next (getitem a!1)) 0)
       (= A (+ 1 (HeapSize I)))
       ((_ is O_item) a!1)
       (= B a!2)))
      )
      (inv_main16 B H G F E D A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main21 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and ((_ is O_item) a!1) (= A (next (getitem a!1)))))
      )
      (inv_main23 E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main13 F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize F) A))
                (select (HeapContents F) A)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main14 F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize F) A))
                (select (HeapContents F) A)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main14 F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize F) A))
                (select (HeapContents F) A)
                defObj)))
(let ((a!2 (not (<= (next (getitem a!1)) 0)))
      (a!5 (not (= (next (getitem a!1)) 0))))
(let ((a!3 (and a!2 (>= (HeapSize F) (next (getitem a!1))))))
(let ((a!4 (ite a!3 (select (HeapContents F) (next (getitem a!1))) defObj)))
  (and (not ((_ is O_item) a!4)) ((_ is O_item) a!1) a!5)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main16 G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main21 D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main23 E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main28 D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (not ((_ is O_item) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)

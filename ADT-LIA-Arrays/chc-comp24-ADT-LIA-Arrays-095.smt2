(set-logic HORN)

(declare-datatypes ((node 0)) (((node  (h Int) (n Int)))))
(declare-datatypes ((HeapObject 0)) (((O_Int  (getInt Int)) (O_UInt  (getUInt Int)) (O_Addr  (getAddr Int)) (O_node  (getnode node)) (defObj ))))
(declare-datatypes ((Heap 0)) (((HeapCtor  (HeapSize Int) (HeapContents (Array Int HeapObject))))))

(declare-fun |inv_main83| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main30| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main53| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main76| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main0| ( Heap Int ) Bool)
(declare-fun |inv_main3| ( Heap Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main74| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main57| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main67| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main40| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main77| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main22| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main58| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main68| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main23| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main49| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main18| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main17| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main37| ( Heap Int Int Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Heap) (v_1 Int) ) 
    (=>
      (and
        (and (= A (HeapCtor 0 ((as const (Array Int HeapObject)) defObj))) (= 1 v_1))
      )
      (inv_main3 A v_1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main17 J I H G F E D C B)
        (= A 0)
      )
      (inv_main18 J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (v_19 Int) ) 
    (=>
      (and
        (inv_main49 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= I (h (getnode a!1)))
       (= G R)
       (= F Q)
       (= E P)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (not (= J 0))
       (= J O)
       (= H S)
       ((_ is O_node) a!1)
       (= I 3)
       (= v_19 J)))
      )
      (inv_main67 H G F E J D C B v_19)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main68 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (not (= J 0))
       (= J (n (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)))
      )
      (inv_main67 I H G F E D C B J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main53 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A (n (getnode a!1)))
       (= J 0)
       (= J R)
       (= I S)
       ((_ is O_node) a!1)
       (= H Q)))
      )
      (inv_main58 I J H G F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main37 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= I R)
       (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A (n (getnode a!1)))
       (= J S)
       ((_ is O_node) a!1)
       (= H Q)))
      )
      (inv_main17 J I H G F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I Int) (J Int) (K Heap) (v_11 Int) ) 
    (=>
      (and
        (inv_main3 K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) (O_node G)))))
  (and (= I (+ 1 (HeapSize K))) (= F J) (= H a!1) (not (= I 0)) (= v_11 I)))
      )
      (inv_main17 H F I E D C B A v_11)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main17 J I H G F E D C B)
        (and (= I 0) (not (= A 0)))
      )
      (inv_main23 J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main18 J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (select (HeapContents J) B)
                defObj)))
(let ((a!2 (O_node (node 3 (n (getnode a!1))))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (HeapCtor (HeapSize J) (store (HeapContents J) B a!2))
                J)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main40 A I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main67 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (not (= J 1))
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)))
      )
      (inv_main83 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main76 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (not (= J 2))
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)))
      )
      (inv_main83 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main30 J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (select (HeapContents J) B)
                defObj)))
(let ((a!2 (O_node (node (h (getnode a!1)) G))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (HeapCtor (HeapSize J) (store (HeapContents J) B a!2))
                J)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main37 A I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (v_19 Int) ) 
    (=>
      (and
        (inv_main49 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (not (= J 3))
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)
       (= v_19 A)))
      )
      (inv_main53 I H G A E D C B v_19)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q node) (R Heap) (S Heap) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Heap) ) 
    (=>
      (and
        (inv_main22 C1 B1 A1 Z Y X W V U)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize R))
                     (store (HeapContents R) (+ 1 (HeapSize R)) (O_node Q))))
      (a!2 (ite (and (not (<= U 0)) (>= (HeapSize C1) U))
                (select (HeapContents C1) U)
                defObj)))
(let ((a!3 (O_node (node 1 (n (getnode a!2))))))
(let ((a!4 (ite (and (not (<= U 0)) (>= (HeapSize C1) U))
                (HeapCtor (HeapSize C1) (store (HeapContents C1) U a!3))
                C1)))
  (and (= O N)
       (= N A1)
       (= M L)
       (= L Z)
       (= K J)
       (= J Y)
       (= I H)
       (= H X)
       (= G F)
       (= F W)
       (= E D)
       (= D V)
       (= C B)
       (= B U)
       (= A B1)
       (not (= T 0))
       (= T (+ 1 (HeapSize R)))
       (= S a!1)
       (= R a!4)
       ((_ is O_node) a!2)
       (= P 0)))))
      )
      (inv_main30 S P O T K I G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q node) (R Heap) (S Heap) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Heap) ) 
    (=>
      (and
        (inv_main23 C1 B1 A1 Z Y X W V U)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize R))
                     (store (HeapContents R) (+ 1 (HeapSize R)) (O_node Q))))
      (a!2 (ite (and (not (<= U 0)) (>= (HeapSize C1) U))
                (select (HeapContents C1) U)
                defObj)))
(let ((a!3 (O_node (node 2 (n (getnode a!2))))))
(let ((a!4 (ite (and (not (<= U 0)) (>= (HeapSize C1) U))
                (HeapCtor (HeapSize C1) (store (HeapContents C1) U a!3))
                C1)))
  (and (= O N)
       (= N A1)
       (= M L)
       (= L Z)
       (= K J)
       (= J Y)
       (= I H)
       (= H X)
       (= G F)
       (= F W)
       (= E D)
       (= D V)
       (= C B)
       (= B U)
       (= A B1)
       (not (= T 0))
       (= T (+ 1 (HeapSize R)))
       (= S a!1)
       (= R a!4)
       ((_ is O_node) a!2)
       (= P 1)))))
      )
      (inv_main30 S P O T K I G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main53 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A (n (getnode a!1)))
       (not (= J 0))
       (= J R)
       (= I S)
       ((_ is O_node) a!1)
       (= H Q)))
      )
      (inv_main57 I J H G F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main17 J I H G F E D C B)
        (and (not (= I 0)) (not (= A 0)))
      )
      (inv_main22 J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main74 I H G F E D C B A)
        (not (= A 0))
      )
      (inv_main76 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main76 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= J 2)
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)))
      )
      (inv_main77 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main77 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= I R)
       (= G P)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A (n (getnode a!1)))
       (= J S)
       ((_ is O_node) a!1)
       (= H Q)))
      )
      (inv_main74 J I H G F E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (v_19 Int) ) 
    (=>
      (and
        (inv_main49 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= I (h (getnode a!1)))
       (= G R)
       (= F Q)
       (= E P)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= J 0)
       (= J O)
       (= H S)
       ((_ is O_node) a!1)
       (= I 3)
       (= v_19 D)))
      )
      (inv_main74 H G F E J D C B v_19)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (v_19 Int) ) 
    (=>
      (and
        (inv_main68 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= J 0)
       (= J (n (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)
       (= v_19 D)))
      )
      (inv_main74 I H G F E D C B v_19)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (v_19 Int) ) 
    (=>
      (and
        (inv_main40 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize S) Q))
                (select (HeapContents S) Q)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= J 3)
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)
       (= 0 v_19)))
      )
      (inv_main0 I v_19)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (v_9 Int) ) 
    (=>
      (and
        (inv_main74 I H G F E D C B A)
        (and (= A 0) (= 0 v_9))
      )
      (inv_main0 I v_9)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (inv_main67 S R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (select (HeapContents S) K)
                defObj)))
  (and (= G Q)
       (= F P)
       (= E O)
       (= D N)
       (= C M)
       (= B L)
       (= A K)
       (= J 1)
       (= J (h (getnode a!1)))
       (= I S)
       ((_ is O_node) a!1)
       (= H R)))
      )
      (inv_main68 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Heap) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Heap) (v_37 Int) ) 
    (=>
      (and
        (inv_main40 K1 J1 I1 H1 G1 F1 E1 D1 C1)
        (let ((a!1 (ite (and (not (<= I1 0)) (>= (HeapSize K1) I1))
                (select (HeapContents K1) I1)
                defObj)))
  (and (= G P)
       (= F O)
       (= E N)
       (= D 0)
       (= C L)
       (= B K)
       (= A J)
       (= Z J1)
       (= Y I1)
       (= X H1)
       (= W G1)
       (= V F1)
       (= U E1)
       (= T D1)
       (= S C1)
       (= Q 1)
       (= P Y)
       (= O X)
       (= N 0)
       (= M V)
       (= L U)
       (= K T)
       (= J S)
       (not (= B1 3))
       (= B1 (h (getnode a!1)))
       (= R A1)
       (= I R)
       (= A1 K1)
       ((_ is O_node) a!1)
       (= H Q)
       (= v_37 G)))
      )
      (inv_main49 I H G F E D C B v_37)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) (v_18 Int) (v_19 Int) ) 
    (=>
      (and
        (inv_main57 R Q P O N M L K J)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize R) O))
                (select (HeapContents R) O)
                defObj)))
(let ((a!2 (O_node (node (h (getnode a!1)) N))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize R) O))
                (HeapCtor (HeapSize R) (store (HeapContents R) O a!2))
                R)))
  (and (= H Q)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A J)
       (= I a!3)
       ((_ is O_node) a!1)
       (= G P)
       (= 0 v_18)
       (= v_19 F)))))
      )
      (inv_main49 I v_18 G F v_19 D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) (v_18 Int) (v_19 Int) ) 
    (=>
      (and
        (inv_main58 R Q P O N M L K J)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize R) O))
                (select (HeapContents R) O)
                defObj)))
(let ((a!2 (O_node (node (h (getnode a!1)) M))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize R) O))
                (HeapCtor (HeapSize R) (store (HeapContents R) O a!2))
                R)))
  (and (= H Q)
       (= F O)
       (= E N)
       (= D M)
       (= C L)
       (= B K)
       (= A J)
       (= I a!3)
       ((_ is O_node) a!1)
       (= G P)
       (= 1 v_18)
       (= v_19 F)))))
      )
      (inv_main49 I v_18 G F E v_19 C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main22 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main23 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main30 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main37 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main18 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main40 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (select (HeapContents I) G)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main49 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main53 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main57 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize I) F))
                (select (HeapContents I) F)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main58 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize I) F))
                (select (HeapContents I) F)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main67 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main68 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main76 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main77 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main83 I H G F E D C B A)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main0 C B)
        (let ((a!1 (not (= (select (HeapContents C) A) defObj))))
  (and (>= (HeapSize C) A) (not (<= A 0)) a!1))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)

(set-logic HORN)

(declare-datatypes ((node 0)) (((node  (data Int) (next Int) (prev Int)))))
(declare-datatypes ((HeapObject 0)) (((O_Int  (getInt Int)) (O_UInt  (getUInt Int)) (O_Addr  (getAddr Int)) (O_node  (getnode node)) (defObj ))))
(declare-datatypes ((Heap 0)) (((HeapCtor  (HeapSize Int) (HeapContents (Array Int HeapObject))))))

(declare-fun |inv_main56| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main81| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main4| ( Heap Int Int ) Bool)
(declare-fun |inv_main78| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main80| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main54| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main43| ( Heap Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main96| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main12| ( Heap Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main53| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main36| ( Heap Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main73| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main42| ( Heap Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main47| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main67| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main62| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main55| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main8| ( Heap Int Int Int Int Int ) Bool)
(declare-fun |inv_main19| ( Heap Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main66| ( Heap Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main93| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main58| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main68| ( Heap Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main18| ( Heap Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main28| ( Heap Int Int Int Int Int ) Bool)
(declare-fun |inv_main50| ( Heap Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |inv_main22| ( Heap Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Heap) (v_1 Int) (v_2 Int) ) 
    (=>
      (and
        (and (= A (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)))
     (= 2 v_1)
     (= 1 v_2))
      )
      (inv_main4 A v_1 v_2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main78 H G F E D C B A)
        (not (= B 0))
      )
      (inv_main80 H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) ) 
    (=>
      (and
        (inv_main54 X W V U T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (select (HeapContents X) O)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) U (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (HeapCtor (HeapSize X) (store (HeapContents X) O a!2))
                X)))
  (and (= L U)
       (= J W)
       (= I V)
       (= H T)
       (= G S)
       (= F R)
       (= E Q)
       (= D P)
       (= C O)
       (= B N)
       (= A M)
       (= K a!3)
       ((_ is O_node) a!1)
       (not (= L 0))))))
      )
      (inv_main62 K J I L H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main42 L K J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) 0))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (HeapCtor (HeapSize L) (store (HeapContents L) B a!2))
                L)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main43 A K J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main80 I H G F E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (and ((_ is O_node) a!1) (= A (next (getnode a!1)))))
      )
      (inv_main81 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main66 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (and ((_ is O_node) a!1) (= D (data (getnode a!1)))))
      )
      (inv_main73 H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main68 J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize J) D))
                (select (HeapContents J) D)
                defObj)))
  (and (= A (+ 1 C))
       (= H (data (getnode a!1)))
       (not (= C (+ (- 1) E)))
       ((_ is O_node) a!1)
       (not (= B 0))))
      )
      (inv_main67 J I H G F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (v_6 Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main28 F E D C B A)
        (and (not (= C 0)) (not (= 0 A)) (= v_6 C) (= 0 v_7))
      )
      (inv_main67 F E D C B A v_6 v_7)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Heap) ) 
    (=>
      (and
        (inv_main93 C1 B1 A1 Z Y X W V U)
        (let ((a!1 (ite (and (not (<= U 0)) (>= (HeapSize C1) U))
                (select (HeapContents C1) U)
                defObj))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize S) K))
                (HeapCtor (HeapSize S) (store (HeapContents S) K defObj))
                S)))
  (and (= C M)
       (= B L)
       (= A K)
       (= P Z)
       (= E O)
       (not (= T 0))
       (= T J)
       (= R B1)
       (= Q A1)
       (= O Y)
       (= N X)
       (= M W)
       (= L V)
       (= K U)
       (= J (next (getnode a!1)))
       (= H R)
       (= G Q)
       (= F P)
       (= S C1)
       (= I a!2)
       ((_ is O_node) a!1)
       (= D N)))
      )
      (inv_main93 I H G F E D C B T)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (v_8 Int) ) 
    (=>
      (and
        (inv_main78 H G F E D C B A)
        (and (= B 0) (= A (+ 1 G)) (not (= E 0)) (= v_8 E))
      )
      (inv_main93 H G F E D C B A v_8)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (inv_main53 M L K J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize M) C))
                (select (HeapContents M) C)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) D (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= C 0)) (>= (HeapSize M) C))
                (HeapCtor (HeapSize M) (store (HeapContents M) C a!2))
                M)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main55 A L K J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Heap) ) 
    (=>
      (and
        (inv_main50 Z Y X W V U T S R Q P O)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize Z) O))
                (select (HeapContents Z) O)
                defObj)))
  (and (= M Y)
       (= B (next (getnode a!1)))
       (= L X)
       (= K W)
       (= J V)
       (= I U)
       (= H T)
       (= G S)
       (= F R)
       (= E Q)
       (= D P)
       (= C O)
       (= N Z)
       ((_ is O_node) a!1)
       (= A (+ (- 1) F))))
      )
      (inv_main47 N M L K J I H G A E D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Heap) (V Heap) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Heap) (v_33 Int) ) 
    (=>
      (and
        (inv_main43 G1 F1 E1 D1 C1 B1 A1 Z Y X W)
        (let ((a!1 (ite (and (not (<= W 0)) (>= (HeapSize G1) W))
                (select (HeapContents G1) W)
                defObj)))
(let ((a!2 (O_node (node X (next (getnode a!1)) (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= W 0)) (>= (HeapSize G1) W))
                (HeapCtor (HeapSize G1) (store (HeapContents G1) W a!2))
                G1)))
  (and (= C W)
       (= B 0)
       (= A X)
       (= H G)
       (= G Z)
       (= F E)
       (= E Y)
       (= T S)
       (= I A1)
       (= S F1)
       (= R Q)
       (= Q E1)
       (= P O)
       (= O D1)
       (= N M)
       (= M C1)
       (= L K)
       (= K B1)
       (= J I)
       (= V U)
       (= U a!3)
       ((_ is O_node) a!1)
       (= D C)
       (= v_33 P)))))
      )
      (inv_main47 V T R P N L J H F D B v_33)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Heap) ) 
    (=>
      (and
        (inv_main58 U T S R Q P O N M L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize U) J))
                (select (HeapContents U) J)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) L))))
(let ((a!3 (ite (and (not (<= J 0)) (>= (HeapSize U) J))
                (HeapCtor (HeapSize U) (store (HeapContents U) J a!2))
                U)))
  (and (= G S)
       (= F R)
       (= E Q)
       (= D P)
       (= C O)
       (= B N)
       (= A M)
       (= I a!3)
       ((_ is O_node) a!1)
       (= H T)))))
      )
      (inv_main28 I H G F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) ) 
    (=>
      (and
        (inv_main56 X W V U T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (select (HeapContents X) O)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) M (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (HeapCtor (HeapSize X) (store (HeapContents X) O a!2))
                X)))
  (and (= L M)
       (= J W)
       (= I V)
       (= H U)
       (= G T)
       (= F S)
       (= E R)
       (= D Q)
       (= C P)
       (= B O)
       (= A N)
       (= K a!3)
       ((_ is O_node) a!1)
       (= L 0)))))
      )
      (inv_main28 K J I H G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) ) 
    (=>
      (and
        (inv_main62 X W V U T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= U 0)) (>= (HeapSize X) U))
                (select (HeapContents X) U)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) O))))
(let ((a!3 (ite (and (not (<= U 0)) (>= (HeapSize X) U))
                (HeapCtor (HeapSize X) (store (HeapContents X) U a!2))
                X)))
  (and (= J V)
       (= I U)
       (= H T)
       (= G S)
       (= F R)
       (= E Q)
       (= D P)
       (= C O)
       (= B N)
       (= A M)
       (= L a!3)
       ((_ is O_node) a!1)
       (= K W)))))
      )
      (inv_main28 L K J C H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) ) 
    (=>
      (and
        (inv_main54 X W V U T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (select (HeapContents X) O)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) U (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (HeapCtor (HeapSize X) (store (HeapContents X) O a!2))
                X)))
  (and (= L U)
       (= J W)
       (= I V)
       (= H T)
       (= G S)
       (= F R)
       (= E Q)
       (= D P)
       (= C O)
       (= B N)
       (= A M)
       (= K a!3)
       ((_ is O_node) a!1)
       (= L 0)))))
      )
      (inv_main28 K J I C H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (inv_main19 N M L K J I H)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize N) H))
                (select (HeapContents N) H)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) 0))))
(let ((a!3 (ite (and (not (<= H 0)) (>= (HeapSize N) H))
                (HeapCtor (HeapSize N) (store (HeapContents N) H a!2))
                N)))
  (and (= E M)
       (= D L)
       (= C K)
       (= B J)
       (not (= G 0))
       (= G I)
       (= F a!3)
       ((_ is O_node) a!1)
       (= A H)))))
      )
      (inv_main22 F E D C B G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) ) 
    (=>
      (and
        (inv_main56 X W V U T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (select (HeapContents X) O)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) M (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= O 0)) (>= (HeapSize X) O))
                (HeapCtor (HeapSize X) (store (HeapContents X) O a!2))
                X)))
  (and (= L M)
       (= J W)
       (= I V)
       (= H U)
       (= G T)
       (= F S)
       (= E R)
       (= D Q)
       (= C P)
       (= B O)
       (= A N)
       (= K a!3)
       ((_ is O_node) a!1)
       (not (= L 0))))))
      )
      (inv_main58 K J I H G F E D C B A L)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main12 H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
(let ((a!2 (O_node (node D (next (getnode a!1)) (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (HeapCtor (HeapSize H) (store (HeapContents H) B a!2))
                H)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main18 A G F E D C B)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main18 H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) C (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (HeapCtor (HeapSize H) (store (HeapContents H) B a!2))
                H)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main19 A G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main47 L K J I H G F E D C B A)
        (and (not (<= 1 D)) (not (= B 0)))
      )
      (inv_main53 L K J I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main47 L K J I H G F E D C B A)
        (and (not (<= 1 D)) (= B 0))
      )
      (inv_main54 L K J I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (inv_main55 M L K J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize M) D))
                (select (HeapContents M) D)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) C))))
(let ((a!3 (ite (and (not (<= D 0)) (>= (HeapSize M) D))
                (HeapCtor (HeapSize M) (store (HeapContents M) D a!2))
                M)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main56 A L K J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O node) (P Heap) (Q Heap) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Heap) (Y Int) ) 
    (=>
      (and
        (inv_main8 X W V U T S)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize P))
                     (store (HeapContents P) (+ 1 (HeapSize P)) (O_node O))))
      (a!2 (not (<= 1 (+ W (* (- 2) Y)))))
      (a!3 (not (<= 1 (+ (* (- 1) W) (* 2 Y))))))
  (and (= L K)
       (= A G)
       (= N M)
       (= M W)
       (= K V)
       (= J I)
       (= I S)
       (= H G)
       (= G 5)
       (= F E)
       (= E Y)
       (= D 3)
       (= C G)
       (= B E)
       (= R (+ 1 (HeapSize P)))
       (= Q a!1)
       (= P X)
       (not (<= 1 U))
       (<= (- 1) (+ (* (- 1) W) (* 2 Y)))
       (<= (- 1) (+ W (* (- 2) Y)))
       (or a!2 (<= 1 W))
       (or a!3 (<= W (- 1)))
       (not (= 0 R))))
      )
      (inv_main36 Q N L J H F D C B A R)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main68 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
(let ((a!2 (not (= G (data (getnode a!1))))))
  (and ((_ is O_node) a!1) a!2)))
      )
      (inv_main96 I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main81 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
(let ((a!2 (not (= G (data (getnode a!1))))))
  (and ((_ is O_node) a!1) a!2)))
      )
      (inv_main96 I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main66 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
(let ((a!2 (not (= D (data (getnode a!1))))))
  (and ((_ is O_node) a!1) a!2)))
      )
      (inv_main96 H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main78 H G F E D C B A)
        (and (not (= A (+ 1 G))) (= B 0))
      )
      (inv_main96 H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) (v_12 Int) ) 
    (=>
      (and
        (inv_main47 L K J I H G F E D C B A)
        (and (<= 1 D) (= v_12 A))
      )
      (inv_main50 L K J I H G F E D C A v_12)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F node) (G Heap) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (inv_main8 N M L K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize N))
                     (store (HeapContents N) (+ 1 (HeapSize N)) (O_node F)))))
  (and (= A I)
       (= E M)
       (= D L)
       (= C K)
       (= B J)
       (= H (+ 1 (HeapSize N)))
       (= G a!1)
       (<= 1 K)
       (not (= 0 H))))
      )
      (inv_main12 G E D C B A H)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main36 L K J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) 0 (prev (getnode a!1))))))
(let ((a!3 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (HeapCtor (HeapSize L) (store (HeapContents L) B a!2))
                L)))
  (and ((_ is O_node) a!1) (= A a!3)))))
      )
      (inv_main42 A K J I H G F E D C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main22 O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize O) J))
                (select (HeapContents O) J)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) I))))
(let ((a!3 (ite (and (not (<= J 0)) (>= (HeapSize O) J))
                (HeapCtor (HeapSize O) (store (HeapContents O) J a!2))
                O)))
  (and (= G N)
       (= F M)
       (= E L)
       (= D K)
       (= C J)
       (= A (+ (- 1) E))
       (= H a!3)
       ((_ is O_node) a!1)
       (= B I)))))
      )
      (inv_main8 H G F A D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (inv_main19 O N M L K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize O) I))
                (select (HeapContents O) I)
                defObj)))
(let ((a!2 (O_node (node (data (getnode a!1)) (next (getnode a!1)) 0))))
(let ((a!3 (ite (and (not (<= I 0)) (>= (HeapSize O) I))
                (HeapCtor (HeapSize O) (store (HeapContents O) I a!2))
                O)))
  (and (= F N)
       (= E M)
       (= D L)
       (= C K)
       (= A (+ (- 1) D))
       (= H 0)
       (= H J)
       (= G a!3)
       ((_ is O_node) a!1)
       (= B I)))))
      )
      (inv_main8 G F E A C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (v_3 Int) (v_4 Int) (v_5 Int) ) 
    (=>
      (and
        (inv_main4 C B A)
        (and (= v_3 B) (= v_4 A) (= 0 v_5))
      )
      (inv_main8 C B A v_3 v_4 v_5)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main68 J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize J) D))
                (select (HeapContents J) D)
                defObj)))
  (and (= H (data (getnode a!1)))
       ((_ is O_node) a!1)
       (or (= B 0) (= C (+ (- 1) E)))
       (= A (+ 1 C))))
      )
      (inv_main66 J I H G F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (v_6 Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main28 F E D C B A)
        (and (or (= C 0) (= 0 A)) (= v_6 C) (= 0 v_7))
      )
      (inv_main66 F E D C B A v_6 v_7)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main81 J I H G F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize J) D))
                (select (HeapContents J) D)
                defObj)))
  (and (= H (data (getnode a!1))) ((_ is O_node) a!1) (= A (+ 1 C))))
      )
      (inv_main78 J I H G F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (inv_main73 R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize R) L))
                (select (HeapContents R) L)
                defObj)))
  (and (= I Q)
       (= H P)
       (= G O)
       (= F N)
       (= D L)
       (= C K)
       (= B (next (getnode a!1)))
       (= A (+ 1 C))
       (= J R)
       ((_ is O_node) a!1)
       (= E M)))
      )
      (inv_main78 J I H G F E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main67 I H G F E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (and ((_ is O_node) a!1) (= A (next (getnode a!1)))))
      )
      (inv_main68 I H G F E D C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main12 G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize G) A))
                (select (HeapContents G) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main18 G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize G) A))
                (select (HeapContents G) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main19 G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize G) A))
                (select (HeapContents G) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main22 G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main36 K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize K) A))
                (select (HeapContents K) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main42 K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize K) A))
                (select (HeapContents K) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main43 K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize K) A))
                (select (HeapContents K) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main50 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize L) A))
                (select (HeapContents L) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main53 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main55 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize L) C))
                (select (HeapContents L) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main56 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize L) C))
                (select (HeapContents L) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main58 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize L) A))
                (select (HeapContents L) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main54 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize L) C))
                (select (HeapContents L) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main62 L K J I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize L) I))
                (select (HeapContents L) I)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main67 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main68 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main66 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main73 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main80 H G F E D C B A)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main81 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize I) C))
                (select (HeapContents I) C)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main93 I H G F E D C B A)
        (let ((a!1 (ite (and (not (<= A 0)) (>= (HeapSize I) A))
                (select (HeapContents I) A)
                defObj)))
  (not ((_ is O_node) a!1)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main96 H G F E D C B A)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
